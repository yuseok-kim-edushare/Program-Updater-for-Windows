name: Continuous Deployment
on:
  push:
    branches:
      - main # main 브랜치로의 모든 push 이벤트 (PR 병합 포함) 에 실행

permissions:
  contents: write
  discussions: write

jobs:
  deploy:
    runs-on: windows-2022

    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      with:
        fetch-tags: true
        fetch-depth: 0

    - name: Cache NuGet packages
      uses: actions/cache@v4
      with:
        path: ${{ github.workspace }}/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.sln*', '**/*.csproj*') }}
        restore-keys: |
          ${{ runner.os }}-nuget-

    - name: Restore dependencies
      run: nuget restore updater.csproj -ConfigFile nuget.config
      
    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v2
    
    - name: Build solution for release (without tests)
      run: |
        dotnet publish updater.csproj --configuration Admin -f net481
        dotnet publish updater.csproj --configuration NonAdmin -f net481
        dotnet publish ConfigManager/ProgramUpdater.ConfigManager.csproj --configuration Release -f net481

    - name: Install ILRepack
      run: dotnet tool install -g dotnet-ilrepack

    - name: Repackaging dlls and exe into single exe file 1 (admin)
      run: |
        $buildPath = "${{ github.workspace }}\bin\Admin\net481\publish"
        $outputPath = "${{ github.workspace }}\release-files\updater-admin.exe"
        ilrepack /target:winexe /targetplatform:"v4,C:\Windows\Microsoft.NET\Framework\v4.0.30319" /internalize /union /out:$outputPath $buildPath\updater.exe `
        $buildPath\Microsoft.Bcl.AsyncInterfaces.dll `
        $buildPath\Microsoft.Extensions.Configuration.Abstractions.dll `
        $buildPath\Microsoft.Extensions.DependencyInjection.Abstractions.dll `
        $buildPath\Microsoft.Extensions.DependencyInjection.dll `
        $buildPath\Microsoft.Extensions.Http.dll `
        $buildPath\Microsoft.Extensions.Logging.Abstractions.dll `
        $buildPath\Microsoft.Extensions.Logging.dll `
        $buildPath\Microsoft.Extensions.Options.dll `
        $buildPath\Microsoft.Extensions.Primitives.dll `
        $buildPath\Newtonsoft.Json.dll `
        $buildPath\System.Buffers.dll `
        $buildPath\System.Diagnostics.DiagnosticSource.dll `
        $buildPath\System.Memory.dll `
        $buildPath\System.Numerics.Vectors.dll `
        $buildPath\System.Runtime.CompilerServices.Unsafe.dll `
        $buildPath\System.Threading.Tasks.Extensions.dll `
        $buildPath\System.ValueTuple.dll

    - name: Repackaging dlls and exe into single exe file 2 (nonadmin)
      run: |
        $buildPath = "${{ github.workspace }}\bin\NonAdmin\net481\publish"
        $outputPath = "${{ github.workspace }}\release-files\updater-nonadmin.exe"
        ilrepack /target:winexe /targetplatform:"v4,C:\Windows\Microsoft.NET\Framework\v4.0.30319" /internalize /union /out:$outputPath $buildPath\updater.exe `
        $buildPath\Microsoft.Bcl.AsyncInterfaces.dll `
        $buildPath\Microsoft.Extensions.Configuration.Abstractions.dll `
        $buildPath\Microsoft.Extensions.DependencyInjection.Abstractions.dll `
        $buildPath\Microsoft.Extensions.DependencyInjection.dll `
        $buildPath\Microsoft.Extensions.Http.dll `
        $buildPath\Microsoft.Extensions.Logging.Abstractions.dll `
        $buildPath\Microsoft.Extensions.Logging.dll `
        $buildPath\Microsoft.Extensions.Options.dll `
        $buildPath\Microsoft.Extensions.Primitives.dll `
        $buildPath\Newtonsoft.Json.dll `
        $buildPath\System.Buffers.dll `
        $buildPath\System.Diagnostics.DiagnosticSource.dll `
        $buildPath\System.Memory.dll `
        $buildPath\System.Numerics.Vectors.dll `
        $buildPath\System.Runtime.CompilerServices.Unsafe.dll `
        $buildPath\System.Threading.Tasks.Extensions.dll `
        $buildPath\System.ValueTuple.dll

    - name: Repackaging dlls and exe into single exe file 3 (config manager)
      run: |
        $buildPath = "${{ github.workspace }}\ConfigManager\bin\Release\net481\publish"
        $outputPath = "${{ github.workspace }}\release-files\updater-configmanager.exe"
        ilrepack /target:winexe /targetplatform:"v4,C:\Windows\Microsoft.NET\Framework64\v4.0.30319" /internalize /union /out:$outputPath $buildPath\ProgramUpdater.ConfigManager.exe $buildPath\Newtonsoft.Json.dll
    
    - name: Get latest release version and Generate release notes
      id: get_latest_release
      run: |
        $latest_release = (Invoke-RestMethod -Uri "https://api.github.com/repos/${{ github.repository }}/releases/latest").tag_name
        Write-Output "Latest release version: $latest_release"
        echo "latest_release=$latest_release" >> $env:GITHUB_ENV
        $versionParts = $latest_release.Split('.')
        $versionParts[-1] = [int]$versionParts[-1] + 1
        $newVersionString = $versionParts -join '.'
        echo "new_release=$newVersionString" >> $env:GITHUB_ENV
        $releaseNotes = "## Changes in " + $latest_release + "`n"
        $releaseNotes += (git log HEAD ^$latest_release --oneline) -join "`n"
        $releaseNotes += "`n"
        $releaseNotes += "### File edited `n"
        $releaseNotes += "`n"
        $releaseNotes += (git diff HEAD ^$latest_release --compact-summary) -join "`n"
        $releaseNotes | Out-File -FilePath releaseNotes.txt -Encoding utf8
        $releaseNotesContent = Get-Content -Path releaseNotes.txt -Raw
        echo "release_notes<<EOF" >> $env:GITHUB_ENV
        echo "$releaseNotesContent" >> $env:GITHUB_ENV
        echo "EOF" >> $env:GITHUB_ENV

    - name: Explicit Version Order apply to create release
      run: |
        $latestCommitMessage = (git log -1 --pretty=%B)
        foreach ($line in $latestCommitMessage) {
          if ($line -match "Update Version to (\d+\.\d+\.\d+)") {
            $messageParts = $line -split ' '
            $lastPart = $messageParts[-1]
            echo "new_release=$lastPart" >> $env:GITHUB_ENV
          }
        }

    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          ${{ github.workspace }}\release-files\updater-admin.exe
          ${{ github.workspace }}\release-files\updater-nonadmin.exe
          ${{ github.workspace }}\release-files\updater-configmanager.exe
          ${{ github.workspace }}\example.json
          ${{ github.workspace }}\settings.xml
        tag_name: ${{ env.new_release }}
        name: ${{ env.new_release }}
        body: ${{ env.release_notes }}

